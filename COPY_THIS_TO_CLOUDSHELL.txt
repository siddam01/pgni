# ========================================
# FINAL API DEPLOYMENT
# Copy ALL of this and paste into AWS CloudShell
# This will deploy your working API
# ========================================

echo "=========================================="
echo "ðŸš€ PGNi API Deployment Starting"
echo "=========================================="
echo ""

# Install Go if needed
ssh -i ec2-key.pem -o StrictHostKeyChecking=no ec2-user@34.227.111.143 << 'GOINSTALL'
if ! command -v /usr/local/go/bin/go &> /dev/null; then
    echo "Installing Go..."
    cd /tmp && curl -sL https://go.dev/dl/go1.21.0.linux-amd64.tar.gz -o go.tar.gz
    sudo tar -C /usr/local -xzf go.tar.gz && rm go.tar.gz
fi
/usr/local/go/bin/go version
GOINSTALL

echo ""
echo "âœ“ Go ready"
echo ""

# Clone and build
ssh -i ec2-key.pem -o StrictHostKeyChecking=no ec2-user@34.227.111.143 << 'BUILD'
export PATH=$PATH:/usr/local/go/bin
rm -rf pgni 2>/dev/null
echo "Cloning repository..."
git clone https://github.com/siddam01/pgni.git
cd pgni/pgworld-api-master
echo "Building API..."
go mod tidy
go build -o pgworld-api .
if [ -f "pgworld-api" ]; then
    echo "âœ“ Build successful!"
    ls -lh pgworld-api
else
    echo "âœ— Build failed"
    exit 1
fi
BUILD

echo ""
echo "âœ“ Build complete"
echo ""

# Deploy
ssh -i ec2-key.pem -o StrictHostKeyChecking=no ec2-user@34.227.111.143 << 'DEPLOY'
cd ~/pgni/pgworld-api-master
sudo mkdir -p /opt/pgworld/logs
sudo cp pgworld-api /opt/pgworld/
sudo cp ~/preprod.env /opt/pgworld/.env 2>/dev/null || echo "Using existing .env"
sudo chown -R ec2-user:ec2-user /opt/pgworld

sudo tee /etc/systemd/system/pgworld-api.service > /dev/null << 'SERVICE'
[Unit]
Description=PGWorld API Server
After=network.target

[Service]
Type=simple
User=ec2-user
WorkingDirectory=/opt/pgworld
ExecStart=/opt/pgworld/pgworld-api
EnvironmentFile=/opt/pgworld/.env
Restart=always
RestartSec=10
Environment="PATH=/usr/local/go/bin:/usr/local/bin:/usr/bin:/bin"

[Install]
WantedBy=multi-user.target
SERVICE

sudo systemctl daemon-reload
sudo systemctl enable pgworld-api
sudo systemctl stop pgworld-api 2>/dev/null
sleep 2
sudo systemctl start pgworld-api
sleep 5

echo ""
echo "Service Status:"
sudo systemctl status pgworld-api --no-pager | head -15

echo ""
echo "Testing API..."
curl -s http://localhost:8080/health
echo ""
DEPLOY

echo ""
echo "âœ“ Deployment complete"
echo ""

# Create database
ssh -i ec2-key.pem -o StrictHostKeyChecking=no ec2-user@34.227.111.143 << 'DATABASE'
mysql -h database-pgni.cezawkgguojl.us-east-1.rds.amazonaws.com -u admin -pOmsairamdb951# << 'SQL'
CREATE DATABASE IF NOT EXISTS pgworld CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
USE pgworld;
SELECT 'Database ready!' as Status;
SQL
DATABASE

echo ""
echo "âœ“ Database ready"
echo ""

# Final test
echo "=========================================="
echo "FINAL VALIDATION"
echo "=========================================="
echo ""
RESPONSE=$(curl -s http://34.227.111.143:8080/health)
if [ ! -z "$RESPONSE" ]; then
    echo "âœ… SUCCESS! YOUR API IS LIVE!"
    echo ""
    echo "Response:"
    echo "$RESPONSE"
else
    echo "âš  Testing..."
    sleep 3
    curl -s http://34.227.111.143:8080/health
fi

echo ""
echo "=========================================="
echo "ðŸŽ‰ DEPLOYMENT COMPLETE!"
echo "=========================================="
echo ""
echo "Your API is running at:"
echo "  http://34.227.111.143:8080"
echo ""
echo "Test in browser:"
echo "  http://34.227.111.143:8080/health"
echo ""
echo "Next steps:"
echo "  1. Configure mobile apps with API URL"
echo "  2. Build APK files"
echo "  3. Distribute to users"
echo ""
echo "All documentation in USER_GUIDES/ folder"
echo ""

