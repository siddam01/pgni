# Copy this ENTIRE block and paste into CloudShell at once
# Then press Enter

ssh -i cloudshell-key.pem -o StrictHostKeyChecking=no ec2-user@34.227.111.143 << 'ENDSSH'
#!/bin/bash
set -e
echo "Installing prerequisites..."
sudo yum update -y > /dev/null 2>&1
sudo yum install -y git wget mysql > /dev/null 2>&1
if [ ! -f /usr/local/go/bin/go ]; then
  cd /tmp && wget -q https://go.dev/dl/go1.21.0.linux-amd64.tar.gz
  sudo tar -C /usr/local -xzf go1.21.0.linux-amd64.tar.gz && rm -f go1.21.0.linux-amd64.tar.gz
fi
export PATH=$PATH:/usr/local/go/bin
echo "Building API..."
rm -rf /tmp/pgni && cd /tmp
git clone https://github.com/siddam01/pgni.git > /dev/null 2>&1
cd pgni/pgworld-api-master
go mod download > /dev/null 2>&1 && go build -o pgworld-api .
echo "Deploying..."
sudo systemctl stop pgworld-api 2>/dev/null || true
sudo mkdir -p /opt/pgworld/logs && sudo chown -R ec2-user:ec2-user /opt/pgworld
cp pgworld-api /opt/pgworld/ && chmod +x /opt/pgworld/pgworld-api
cat > /opt/pgworld/.env << 'EOF'
DB_HOST=database-pgni.cezawkgguojl.us-east-1.rds.amazonaws.com
DB_PORT=3306
DB_USER=admin
DB_PASSWORD=Omsairamdb951#
DB_NAME=pgworld
AWS_REGION=us-east-1
S3_BUCKET=pgni-preprod-698302425856-uploads
PORT=8080
test=false
EOF
chmod 600 /opt/pgworld/.env
sudo tee /etc/systemd/system/pgworld-api.service > /dev/null << 'SVC'
[Unit]
Description=PGNi API Server
After=network.target
[Service]
Type=simple
User=ec2-user
WorkingDirectory=/opt/pgworld
ExecStart=/opt/pgworld/pgworld-api
EnvironmentFile=/opt/pgworld/.env
Restart=always
RestartSec=10
StandardOutput=append:/opt/pgworld/logs/output.log
StandardError=append:/opt/pgworld/logs/error.log
[Install]
WantedBy=multi-user.target
SVC
sudo systemctl daemon-reload && sudo systemctl enable pgworld-api && sudo systemctl start pgworld-api
sleep 5
echo "Initializing database..."
mysql -h database-pgni.cezawkgguojl.us-east-1.rds.amazonaws.com -P 3306 -u admin -pOmsairamdb951# -e "CREATE DATABASE IF NOT EXISTS pgworld CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;" 2>/dev/null
mysql -h database-pgni.cezawkgguojl.us-east-1.rds.amazonaws.com -P 3306 -u admin -pOmsairamdb951# pgworld << 'SQL' 2>/dev/null
CREATE TABLE IF NOT EXISTS users (id INT AUTO_INCREMENT PRIMARY KEY, username VARCHAR(100) NOT NULL UNIQUE, email VARCHAR(255) NOT NULL UNIQUE, password_hash VARCHAR(255) NOT NULL, role ENUM('admin', 'pg_owner', 'tenant') NOT NULL, created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
CREATE TABLE IF NOT EXISTS pg_properties (id INT AUTO_INCREMENT PRIMARY KEY, owner_id INT NOT NULL, name VARCHAR(255) NOT NULL, address TEXT, city VARCHAR(100), total_rooms INT DEFAULT 0, created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (owner_id) REFERENCES users(id) ON DELETE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
CREATE TABLE IF NOT EXISTS rooms (id INT AUTO_INCREMENT PRIMARY KEY, property_id INT NOT NULL, room_number VARCHAR(50), rent_amount DECIMAL(10,2), is_occupied BOOLEAN DEFAULT FALSE, created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (property_id) REFERENCES pg_properties(id) ON DELETE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
CREATE TABLE IF NOT EXISTS tenants (id INT AUTO_INCREMENT PRIMARY KEY, user_id INT NOT NULL, room_id INT, name VARCHAR(255) NOT NULL, phone VARCHAR(20), move_in_date DATE, is_active BOOLEAN DEFAULT TRUE, created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
CREATE TABLE IF NOT EXISTS payments (id INT AUTO_INCREMENT PRIMARY KEY, tenant_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date DATE NOT NULL, status ENUM('pending', 'completed', 'failed') DEFAULT 'pending', created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (tenant_id) REFERENCES tenants(id) ON DELETE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
SQL
echo "Testing..."
curl -s http://localhost:8080/health
curl -s http://34.227.111.143:8080/health
echo ""
echo "DEPLOYMENT COMPLETE!"
echo "API URL: http://34.227.111.143:8080/health"
sudo systemctl status pgworld-api --no-pager | head -10
ENDSSH

# Test from CloudShell
sleep 5
curl http://34.227.111.143:8080/health

